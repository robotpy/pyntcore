---
name: dist

on: [push, pull_request]

jobs:
  check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Black
      run: |
        python -m pip install black
        black --check --diff  .

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-18.04]
        python_version: [3.6, 3.7, 3.8]
        architecture: [x86, x64]
        exclude:
        - os: macos-latest
          architecture: x86
        - os: ubuntu-18.04
          architecture: x86

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python_version }}
        architecture: ${{ matrix.architecture }}

    - name: Install build dependencies
      run: |
        python -m pip install 'robotpy-build>=2020.1.8'
        python -m robotpy_build build-dep --install --find-links https://www.tortall.net/~robotpy/wheels/2020/linux_x86_64

    - name: Build wheel
      run: python setup.py bdist_wheel
      env:
        RPYBUILD_PARALLEL: 1
        RPYBUILD_STRIP_LIBPYTHON: 1
    
    - name: Test wheel
      shell: bash
      run: |
        cd dist
        python -m pip install *.whl
        cd ../tests
        python -m pip install -r requirements.txt
        python run_tests.py
    
    - uses: actions/upload-artifact@v1
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      with:
        name: "dist-py${{ matrix.python_version }}-${{ matrix.os }}-${{ matrix.architecture }}"
        path: dist


  publish-linux-wheels:
    runs-on: ubuntu-latest
    needs: [check, build]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    steps:
    - uses: actions/download-artifact@v1
      with:
        name: dist-py3.6-ubuntu-18.04-x64
        path: dist/
    
    - uses: actions/download-artifact@v1
      with:
        name: dist-py3.7-ubuntu-18.04-x64
        path: dist/
    
    - uses: actions/download-artifact@v1
      with:
        name: dist-py3.8-ubuntu-18.04-x64
        path: dist/

    - uses: garygrossgarten/github-action-scp@v0.5.3
      with:
        local: dist
        remote: public_html/2020/linux_x86_64
        host: narya.tortall.net
        username: ${{ secrets.SSH_USER }}
        privateKey: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}


  publish-pypi:
    runs-on: ubuntu-latest
    needs: [check, build]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    steps:
    - uses: actions/checkout@v1

    - uses: actions/download-artifact@v1
      with:
        name: dist-py3.6-windows-latest-x86
        path: dist/

    - uses: actions/download-artifact@v1
      with:
        name: dist-py3.6-windows-latest-x64
        path: dist/
    
    - uses: actions/download-artifact@v1
      with:
        name: dist-py3.6-macos-latest-x64
        path: dist/

    - uses: actions/download-artifact@v1
      with:
        name: dist-py3.7-windows-latest-x86
        path: dist/

    - uses: actions/download-artifact@v1
      with:
        name: dist-py3.7-windows-latest-x64
        path: dist/
    
    - uses: actions/download-artifact@v1
      with:
        name: dist-py3.7-macos-latest-x64
        path: dist/
    
    - uses: actions/download-artifact@v1
      with:
        name: dist-py3.8-windows-latest-x86
        path: dist/

    - uses: actions/download-artifact@v1
      with:
        name: dist-py3.8-windows-latest-x64
        path: dist/
      
    - uses: actions/download-artifact@v1
      with:
        name: dist-py3.8-macos-latest-x64
        path: dist/

    - uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install build dependencies
      run: python -m pip install 'robotpy-build>=2020.1.8'

    - name: Build sdist
      run: python setup.py sdist

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}

    - name: Get Current Tag
      id: currtag
      run: |
        export CURR_TAG=`awk -F'/' '{ print $NF }' <<< ${{ github.event.ref }}`
        echo "::set-output name=tag::$CURR_TAG"
        echo "Version Found: $CURR_TAG"

    - name: Ping pyfrc
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        repository: robotpy/pyfrc
        event-type: tag
        client-payload: '{"package_name": "wpilib", "package_version": "${{ steps.currtag.outputs.tag }}"}'
