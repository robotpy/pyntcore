---
name: dist

on:
  pull_request:
  push:
    branches:
    - main
    tags:
    - '*'

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: psf/black@stable

  #
  # Build native wheels
  #

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-18.04]
        python_version: [3.6, 3.7, 3.8, 3.9]
        architecture: [x86, x64]
        exclude:
        - os: macos-latest
          architecture: x86
        - os: ubuntu-18.04
          architecture: x86

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version }}
        architecture: ${{ matrix.architecture }}
    
    - uses: robotpy/build-actions/install-robotpy-build@v2021
    - uses: robotpy/build-actions/install-build-deps@v2021
    - uses: robotpy/build-actions/build-wheel@v2021
    - uses: robotpy/build-actions/test-native-wheel@v2021
    
    - uses: actions/upload-artifact@v2
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      with:
        name: "dist-py${{ matrix.python_version }}-${{ matrix.os }}-${{ matrix.architecture }}"
        path: dist

  #
  # Build roboRIO/raspbian wheels
  #

  cross-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
        - container: robotpy/roborio-cross-ubuntu:2021.3
          name:  roborio
        - container: robotpy/raspbian-cross-ubuntu:2021.3
          name:  raspbian

    container:
      image: "${{ matrix.os.container }}"

    steps:
    - uses: actions/checkout@v2

    - uses: robotpy/build-actions/install-robotpy-build@v2021
      with:
        python: /build/venv/bin/cross-python
    - uses: robotpy/build-actions/install-build-deps@v2021
      with:
        python: /build/venv/bin/cross-python
        wheeldir: ${{ matrix.os.name }}
    - uses: robotpy/build-actions/build-wheel@v2021
      with:
        python: /build/venv/bin/cross-python

    - uses: actions/upload-artifact@v2
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      with:
        name: dist-${{ matrix.os.name }}
        path: dist

  #
  # Publish wheels to robotpy site, pypi
  #

  publish-rpyrepo:
    runs-on: ubuntu-latest
    needs: [check, build]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: dist-py3.6-ubuntu-18.04-x64
        path: dist/
    
    - uses: actions/download-artifact@v2
      with:
        name: dist-py3.7-ubuntu-18.04-x64
        path: dist/
    
    - uses: actions/download-artifact@v2
      with:
        name: dist-py3.8-ubuntu-18.04-x64
        path: dist/

    - uses: robotpy/github-action-scp@atomic
      with:
        local: dist
        remote: public_html/2021/linux_x86_64
        host: narya.tortall.net
        username: ${{ secrets.SSH_USER }}
        privateKey: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        atomicPut: true

    - name: Ping readthedocs
      uses: robotpy/build-actions/ping-rtd@v2021
      with:
        token: ${{ secrets.RTD_TOKEN }}
        webhook: ${{ secrets.RTD_WEBHOOK }}

    #
    # RoboRIO wheel
    #

    - uses: actions/download-artifact@v2
      with:
        name: dist-roborio
        path: dist-roborio/

    - uses: robotpy/github-action-scp@atomic
      with:
        local: dist-roborio
        remote: public_html/2021/roborio
        host: narya.tortall.net
        username: ${{ secrets.SSH_USER }}
        privateKey: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        atomicPut: true

    #
    # Raspbian wheel
    #

    - uses: actions/download-artifact@v2
      with:
        name: dist-raspbian
        path: dist-raspbian/

    - uses: robotpy/github-action-scp@atomic
      with:
        local: dist-raspbian
        remote: public_html/2021/raspbian
        host: narya.tortall.net
        username: ${{ secrets.SSH_USER }}
        privateKey: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        atomicPut: true


  publish-pypi:
    runs-on: ubuntu-latest
    needs: [check, build, cross-build]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    steps:
    - uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        name: dist-py3.6-windows-latest-x86
        path: dist/

    - uses: actions/download-artifact@v2
      with:
        name: dist-py3.6-windows-latest-x64
        path: dist/
    
    - uses: actions/download-artifact@v2
      with:
        name: dist-py3.6-macos-latest-x64
        path: dist/

    - uses: actions/download-artifact@v2
      with:
        name: dist-py3.7-windows-latest-x86
        path: dist/

    - uses: actions/download-artifact@v2
      with:
        name: dist-py3.7-windows-latest-x64
        path: dist/
    
    - uses: actions/download-artifact@v2
      with:
        name: dist-py3.7-macos-latest-x64
        path: dist/
    
    - uses: actions/download-artifact@v2
      with:
        name: dist-py3.8-windows-latest-x86
        path: dist/

    - uses: actions/download-artifact@v2
      with:
        name: dist-py3.8-windows-latest-x64
        path: dist/
      
    - uses: actions/download-artifact@v2
      with:
        name: dist-py3.8-macos-latest-x64
        path: dist/

    - uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: robotpy/build-actions/install-robotpy-build@v2021
    - uses: robotpy/build-actions/build-sdist@v2021

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}

  ping:
    runs-on: ubuntu-latest
    needs: [publish-rpyrepo, publish-pypi]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')

    steps:
    - name: Get Current Tag
      uses: robotpy/build-actions/get-git-tag@v2021
      id: currtag

    - name: Ping meta
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        repository: robotpy/robotpy-meta
        event-type: tag
        client-payload: '{"package_name": "pyntcore", "package_version": "${{ steps.currtag.outputs.tag }}"}'
