---

extra_includes:
- networktables/BooleanArrayTopic.h
- networktables/BooleanTopic.h
- networktables/DoubleArrayTopic.h
- networktables/DoubleTopic.h
- networktables/FloatArrayTopic.h
- networktables/FloatTopic.h
- networktables/IntegerArrayTopic.h
- networktables/IntegerTopic.h
- networktables/RawTopic.h
- networktables/StringArrayTopic.h
- networktables/StringTopic.h
- networktables/Topic.h
- src/py2value.h
- src/nt_logging.h
- wpi/DataLog.h

classes:
  NetworkTableInstance:
    attributes:
      kDefaultPort3:
      kDefaultPort4:
    enums:
      NetworkMode:
      LogLevel:
    methods:
      NetworkTableInstance:
        overloads:
          "":
            ignore: true
          NT_Inst:
            ignore: true
      GetDefault:
      Create:
      Destroy:
        cpp_code: |
          [](NetworkTableInstance * self) {
            pyntcore::detachLogging(self->GetHandle());
            NetworkTableInstance::Destroy(*self);
          }
      GetHandle:
        ignore: true
      GetTopic:
      GetBooleanTopic:
      GetIntegerTopic:
      GetFloatTopic:
      GetDoubleTopic:
      GetStringTopic:
      GetRawTopic:
      GetBooleanArrayTopic:
      GetIntegerArrayTopic:
      GetFloatArrayTopic:
      GetDoubleArrayTopic:
      GetStringArrayTopic:
      GetTopics:
        overloads:
          "":
          std::string_view:
          std::string_view, unsigned int:
          std::string_view, std::span<std::string_view>:
      GetTopicInfo:
        overloads:
          "":
          std::string_view:
          std::string_view, unsigned int:
          std::string_view, std::span<std::string_view>:
      GetEntry:
      GetTable:
      AddConnectionListener:
        cpp_code: |
          [](NetworkTableInstance * self,
             std::function<void(bool, const ConnectionInfo &)> listener,
             bool immediateNotify) {
            self->AddConnectionListener([listener](const ConnectionNotification& event){
              listener(event.connected, event.conn);
            }, immediateNotify);
          }
      RemoveConnectionListener:
      SetNetworkIdentity:
      GetNetworkMode:
      StartLocal:
        cpp_code: |
          [](NetworkTableInstance * self) {
            pyntcore::attachLogging(self->GetHandle());
            self->StartLocal();
          }
      StopLocal:
      StartServer:
        cpp_code: |
          [](NetworkTableInstance * self, std::string_view persist_filename,  const char* listen_address,
             unsigned int port3, unsigned int port4) {
            pyntcore::attachLogging(self->GetHandle());
            self->StartServer(persist_filename, listen_address, port3, port4);
          }
      StopServer:
      StartClient3:
        cpp_code: |
          [](NetworkTableInstance * self) {
            pyntcore::attachLogging(self->GetHandle());
            self->StartClient3();
          }
      StartClient4:
        cpp_code: |
          [](NetworkTableInstance * self) {
            pyntcore::attachLogging(self->GetHandle());
            self->StartClient4();
          }
      StopClient:
      SetServer:
        overloads:
          char*, unsigned int:
          std::span<const std::pair<std::string_view, unsigned int>>:
          std::span<const std::string_view>, unsigned int:
      SetServerTeam:
      StartDSClient:
      StopDSClient:
      FlushLocal:
      Flush:
      GetConnections:
      IsConnected:
      StartEntryDataLog:
      StopEntryDataLog:
      StartConnectionDataLog:
      StopConnectionDataLog:
      AddLogger:
      RemoveLogger:
      operator==:
      operator!=:
