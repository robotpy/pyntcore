---
extra_includes:
- networktables/NetworkTableInstance.h
- src/py2value.h
- src/pyentry.h

inline_code: |
  #include <src/NetworkTable.cpp.inl>

classes:
  NetworkTable:
    shared_ptr: true
    ignored_bases:
    - ITable
    attributes:
      PATH_SEPARATOR_CHAR:
    methods:
      BasenameKey:
      NormalizeKey:
        overloads:
          wpi::Twine&, bool:
          wpi::Twine&, wpi::SmallVectorImpl<char>&, bool:
            ignore: true
      GetHierarchy:
      NetworkTable:
        ignore: true
      GetInstance:
      Initialize:
        ignore: true
      Shutdown:
        ignore: true
      SetClientMode:
        ignore: true
      SetServerMode:
        ignore: true
      SetTeam:
        ignore: true
      SetIPAddress:
        overloads:
          wpi::StringRef:
            ignore: true
          ArrayRef<std::string>:
            ignore: true
      SetPort:
        ignore: true
      SetDSClientEnabled:
        ignore: true
      SetPersistentFilename:
        ignore: true
      SetNetworkIdentity:
        ignore: true
      GlobalDeleteAll:
        ignore: true
      Flush:
        ignore: true
      SetUpdateRate:
        ignore: true
      SavePersistent:
        ignore: true
      LoadPersistent:
        ignore: true
      GetTable:
        ignore: true
      GetEntry:
      AddEntryListener:
        overloads:
          TableEntryListener, unsigned int [const]:
          wpi::Twine&, TableEntryListener, unsigned int [const]:
      RemoveEntryListener:
      AddSubTableListener:
        overloads:
          TableListener, bool:
          ITableListener*:
            ignore: true
          ITableListener*, bool:
            ignore: true
      RemoveTableListener:
        overloads:
          NT_EntryListener:
          ITableListener*:
            ignore: true
      AddTableListener:
        overloads:
          ITableListener*:
            ignore: true
          ITableListener*, bool:
            ignore: true
          wpi::StringRef, ITableListener*, bool:
            ignore: true
      AddTableListenerEx:
        overloads:
          ITableListener*, unsigned int:
            ignore: true
          wpi::StringRef, ITableListener*, unsigned int:
            ignore: true
      GetSubTable:
      ContainsKey:
      ContainsSubTable:
      GetKeys:
      GetSubTables:
      SetPersistent:
      ClearPersistent:
      IsPersistent:
      SetFlags:
      ClearFlags:
      GetFlags:
      Delete:
      PutNumber:
      SetDefaultNumber:
      GetNumber:
        cpp_code: |
          [](NetworkTable * table, wpi::StringRef key, py::object defaultValue) -> py::object {
            nt::NetworkTableEntry entry;
            {
              py::gil_scoped_release release;
              entry = table->GetEntry(key);
            }
            return pyntcore::GetDoubleEntry(entry, defaultValue);
          }
      PutString:
      SetDefaultString:
      GetString:
        cpp_code: |
          [](NetworkTable * table, wpi::StringRef key, py::object defaultValue) -> py::object {
            nt::NetworkTableEntry entry;
            {
              py::gil_scoped_release release;
              entry = table->GetEntry(key);
            }
            return pyntcore::GetStringEntry(entry, defaultValue);
          }
      PutBoolean:
      SetDefaultBoolean:
      GetBoolean:
        cpp_code: |
          [](NetworkTable * table, wpi::StringRef key, py::object defaultValue) -> py::object {
            nt::NetworkTableEntry entry;
            {
              py::gil_scoped_release release;
              entry = table->GetEntry(key);
            }
            return pyntcore::GetBooleanEntry(entry, defaultValue);
          }
      PutBooleanArray:
      SetDefaultBooleanArray:
      GetBooleanArray:
        cpp_code: |
          [](NetworkTable * table, wpi::StringRef key, py::object defaultValue) -> py::object {
            nt::NetworkTableEntry entry;
            {
              py::gil_scoped_release release;
              entry = table->GetEntry(key);
            }
            return pyntcore::GetBooleanArrayEntry(entry, defaultValue);
          }
      PutNumberArray:
      SetDefaultNumberArray:
      GetNumberArray:
        cpp_code: |
          [](NetworkTable * table, wpi::StringRef key, py::object defaultValue) -> py::object {
            nt::NetworkTableEntry entry;
            {
              py::gil_scoped_release release;
              entry = table->GetEntry(key);
            }
            return pyntcore::GetDoubleArrayEntry(entry, defaultValue);
          }
      PutStringArray:
      SetDefaultStringArray:
      GetStringArray:
        cpp_code: |
          [](NetworkTable * table, wpi::StringRef key, py::object defaultValue) -> py::object {
            nt::NetworkTableEntry entry;
            {
              py::gil_scoped_release release;
              entry = table->GetEntry(key);
            }
            return pyntcore::GetStringArrayEntry(entry, defaultValue);
          }
      PutRaw:
      SetDefaultRaw:
      GetRaw:
        cpp_code: |
          [](NetworkTable * table, wpi::StringRef key, py::object defaultValue) -> py::object {
            nt::NetworkTableEntry entry;
            {
              py::gil_scoped_release release;
              entry = table->GetEntry(key);
            }
            return pyntcore::GetRawEntry(entry, defaultValue);
          }
      PutValue:
      SetDefaultValue:
      GetValue:
        ignore: true
      GetPath:
      SaveEntries:
      LoadEntries:
